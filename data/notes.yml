page:
  title: notes
  subtitle: Things I learn from the real programmers.

list:
  -
    date: 2014-12-17
    tag: ruby
    title: "assert_select"
    sub-title: ''
    body: 'An assertion that selects elements and makes one or more equality tests.Example<br><pre class="ruby" data-result="[object Object]" data-second_best="[object Object]"><code><span class="identifier">assert_select</span> <span class="string">"ol"</span> <span class="identifier"><span class="keyword">do</span></span> |<span class="identifier">elements</span>| <br><span class="identifier">elements</span>.<span class="identifier"><span class="keymethods">each</span></span> <span class="identifier"><span class="keyword">do</span></span> |<span class="identifier">element</span>| <br><span class="identifier">assert_select</span> <span class="identifier">element</span>, <span class="string">"li"</span>, <span class="number">4</span> <span class="identifier"><span class="keyword"><br>end</span></span> <span class="identifier"><span class="keyword"><br>end</span></span> </code></pre>'
    url: 'http://api.rubyonrails.org/classes/ActionDispatch/Assertions/SelectorAssertions.html#method-i-assert_select'
  -
    date: 2014-12-17
    tag: jquery
    title: "$(\"a[href*='travel']\")"
    sub-title: ''
    body: 'find a tags that href has travel in it.'
    url: ''
  -
    date: 2014-12-17
    tag: scss
    title: 'display: table-cell'
    sub-title: ''
    body: 'Gives table rules, like vertical height.'
    url: ''
  -
    date: 2014-12-08
    tag: scss
    title: 'css strategy'
    sub-title: ''
    body: 'Think of classes as cousins and be more generic enough to be reused. They are more similar than I realize.'
    url: ''
  -
    date: 2014-12-08
    title: 'test a POST'
    body: '$.post("/path/to/endpoint",{ test: 1});'
    url: ''
    sub-title: ''
    tag: code
  -
    date: 2014-12-02
    tag: code
    title: 'Cron jobs'
    body: 'Scheduled jobs.'
    url: ''
    sub-title: ''
  -
    date: 2014-12-02
    tag: code
    title: 'Background jobs'
    state:
    body: 'Things that work with apps like sidekiq and resque'
    url: ''
    sub-title: ''
  -
    date: 2014-12-02
    tag: code
    body: 'during each project ask myself to find something that should be refactored. what this will do will encourage me to dig around the gems or files I used.'
    sub-title: ''
    title: 'how to refactor'
    url: ''
  -
    date: 2014-12-02
    tag: code
    title: '2 ways to use return'
    sub-title: ''
    body: 'there are two views on how to use return. 1.) return at the end of the function. 2.) early exit.'
    url: ''
  -
    date: 2014-12-02
    body: "During the story I'm working on, consider looking at the gems to know them. This will help understand the environment and help me find things that need to be refactored later."
    sub-title: ''
    title: 'constructive wandering'
    url: ''
    tag: code
  -
    tag: testing
    title: 'ruby -Itest test/models/name_of_file_controller_test.rb  -n /zz/'
    subtitle: ''
    body: "Run a single test with the -n flag and an reg expression"
    url: ''
    date: 2014-12-19
    state: ''
  -
    tag: git
    title: 'copr [1234]'
    subtitle: ''
    body: "Fetch a remote PR to a local branch by <a href='https://twitter.com/gregvaughn'>Greg Vaughn</a>.<br><em>In .bash_[profile]</em><br><code>copr() { <br> &nbsp;&nbsp;git fetch origin refs/pull/$1/head:pull-request-$1<br>&nbsp;&nbsp;git co pull-request-$1<br> }</code>"
    url: ''
    date: 2014-12-19
    state: ''
  -
    tag: bash
    title: 'tar cfvz [name_of_zipped_version_of_file.tgz] [file that you are zipping]'
    subtitle: ''
    body: "Zip a file from the terminal </br>The Zipped file needs to end with .tgz </br><b>Example;</b> 'tar cfvz myZippedFile.tgz BigFile' </br>cfvz stands for: create file verbose zip"
    url: ''
    date: 2014-12-19
    state: ''
  -
    tag: bash
    title: 'tail -f development.log | grep user'
    subtitle: ''
    body: 'live read of the file in question, ex- development.log. Using grep I can look for log enteries that only have user in them.'
    url: ''
    date: 2014-12-02
    state: ''
  -
    tag: bash
    title: 'find ./source/notes ./source/blog -type f -print0 | xargs -0 stat -f "%m %N" | sort -rn | head -3 | cut -f2- -d" "'
    subtitle: ''
    body: 'Recursively find the last updated files'
    url: ''
    date: 2014-11-29
    state: ''
  -
    tag: bash
    title: 'alias gpom="git pull origin master"'
    subtitle: ''
    body: save yourself from typing sooo much
    url: ''
    date: 2014-12-02
    state: ''
  -
    tag: bash
    title: copr
    subtitle: ''
    body: 'this'
    url: ''
    date: 2014-12-02
    state: ''
  -
    tag: git
    title: 'gcob'
    subtitle: ''
    body: 'git checkout branch [branch name]'
    url: ''
    date: 2014-12-02
    state: ''
  -
    tag: git
    title: 'git log -S [word]'
    subtitle: ''
    body: 'the -S is a regex that will look for the word used in the log'
    url: ''
    date: 2014-12-02
    state: ''
  -
    tag: git
    title: 'git log [file name]'
    subtitle: ''
    body: 'shows changes only for file name'
    url: ''
    date: 2014-12-02
    state: ''
  -
    tag: bundle
    title: 'bundle open [gem]'
    subtitle: ''
    body: 'will open the gem in question'
    url: ''
    date: 2014-11-02
    state: ''
